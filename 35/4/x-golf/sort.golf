## Heapify

# Main loop
k2q # Initial node + 1
(
    d
)
(
    1s # Decrement counter
    d # Starting node
    (
        d2mk3sl
    )
    (
        # Stack: ..., loop counter, parent

        d2m1a # Push left child

        d5akl( # Check if right child valid
            d1a # Get right child
            # Stack: ..., loop counter, parent, left, right

            1c4ac # Load left child
            1c5ac # Load right child

            g( # Put smallest index on bottom
                x
            )i
            p # Remove larger index
        )i

        # Stack: ..., loop counter, parent, small child

        x1c

        # Stack: ..., loop counter, next parent, parent, child

        3a # Adjust child pointer for store

        d1ac # Load child
        2c5ac # Load parent

        # Stack: ..., loop counter, next parent, parent, child, child value, parent value

        d2cg( # Swap if child smaller
            x
            4ko # Set loop counter to large value
        )i

        # Stack: ..., loop counter, next parent, parent, child, large value, small value
        3c5axo # Write small value to parent
        o # Write large value to child

        # Stack: ..., loop counter, next parent, parent
        p
    )wp
)wp

#    0
#  1   2
# 3 4 5 6
# k = 7

#    1
#  6   7
# 2 3 4 5
